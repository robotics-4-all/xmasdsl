XmasModel:
    imports*=Import
	(
		(metadata=Metadata)?
		(randomRangeDefs*=RandomRangeDef)
		(rangeDefs*=RangeDef)
		(colorDefs*=ColorDef)
		(groupDefs*=CommandGroup)
		(program=Program)
	)#
;

Metadata:
    'Metadata'
    (
        ('name:' name=STRING)
        ('description:' description=STRING)?
        ('author:' author=STRING)?
        ('email:' email=STRING)?
        ('token:' token=STRING)?
    )#
    'end'
;

ColorDef:
    'Color' name=ID color=Color
;

RangeDef:
    'Range' name=ID range=Ranges
;

RandomRangeDef:
    'RandomRange' name=ID '([' range=Range '],' percentage=INT ')'
;

Range:
    start=INT (hasEnd=':' (end=INT)?)? (hasStep=':' (step=ChangeIntBy)?)?
;

Ranges:
    '[' ranges*=Range[','] ']'
;

RangeType:
    RangeDef | Ranges
;

Color:
    '[' r=ChangeIntBy  ',' g=ChangeIntBy  ',' b=ChangeIntBy ']'
;

ChangeIntBy:
    (changeBy=ChangeBy)? val=INT
;


Command:
    SetPixelColor   |
    Dim				|
	ColorTransition |
	Linear			|
    Delay           |
    SetBrightness
;

GroupRef:
    ref=[CommandGroup]
;

SetPixelColor:
    'SetPixelColor' '(' (rangeDef=[RangeDef] | range=Ranges | randRange=[RandomRangeDef]) ',' color=[ColorDef] ',' duration=INT (',' maintain=BOOL)? ')'
;

Dim:
    'Dim' '(' (rangeDef=[RangeDef] | range=Ranges | randRange=[RandomRangeDef]) ',' brStart=INT ',' brEnd=INT ',' duration=INT ')'
;

ColorTransition:
    'ColorTransition' '(' (rangeDef=[RangeDef] | range=Ranges | randRange=[RandomRangeDef]) ',' colorStart=[ColorDef] ',' colorEnd=[ColorDef] ',' duration=INT ')'
;

Linear:
    'Linear' '(' (rangeDef=[RangeDef] | range=Ranges | randRange=[RandomRangeDef]) ',' ((offsetDef=[RangeDef]) | (offset=Ranges)) ',' colorStart=[ColorDef] ',' colorEnd=[ColorDef] ',' duration=INT ',' maintain=BOOL ')'
;

Delay:
    'Delay' '(' duration=ChangeIntBy ')'
;

SetBrightness:
    'SetBrightness' '(' value=ChangeIntBy (',' ((rangeDef=[RangeDef]) | (range=Ranges) | (randRange=[RandomRangeDef])) )? ')'
;

Process:
    Serial          |
    Parallel        |
    GroupRef
;

ChangeBy:
    '+' |
    '-'
;

SerCommand:
    Command | Parallel | Repeat | GroupRef
;

ProgramCommand: Command | Parallel | Repeat | GroupRef;

Program:
'Program' '{'
(
    (commands*=ProgramCommand)?
)#
'}'
;

Serial:
'Serial' '{'
(
    (commands*=SerCommand)?
)#
'}'
;

CommandGroup:
'Group' name=ID '{'
(
    (commands*=SerCommand)?
)#
'}'
;

Parallel:
'Parallel' '{'
(
    (processes*=Process)?
)#
'}'
;

Repeat:
'Repeat' times=INT '{'
(
    (commands*=SerCommand)?
)#
'}'
;

// FQN: ID('.'ID)*;
FQN: ID+['.'];
FQNI: ID+['.']('.*')?;
// Import: 'import' importURI=FQNI ('as' name=ID)?;
NID: /(.*?)\n/;
NIDREF: NID+['.']('.*')?;
Import: 'import' name=STRING;

// Comments
Comment: CommentLine | CommentBlock ;
CommentLine: /\/\/.*?$/;
CommentBlock: /\/\*(.|\n)*?\*\//;
